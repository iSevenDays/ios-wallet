// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct RemoveAccountRoleData
//  {
//      //: Identifier of existing account role
//      uint64 roleID;
//  
//      //: reserved for future use
//      union switch (LedgerVersion v)
//      {
//      case EMPTY_VERSION:
//          void;
//      } ext;
//  };

//  ===========================================================================
public struct RemoveAccountRoleData: XDREncodable {
  public var roleID: Uint64
  public var ext: RemoveAccountRoleDataExt

  public init(
      roleID: Uint64,
      ext: RemoveAccountRoleDataExt) {

    self.roleID = roleID
    self.ext = ext
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.roleID.toXDR())
    xdr.append(self.ext.toXDR())

    return xdr
  }

  public enum RemoveAccountRoleDataExt: XDRDiscriminatedUnion {
    case emptyVersion()

    public var discriminant: Int32 {
      switch self {
      case .emptyVersion: return LedgerVersion.emptyVersion.rawValue
      }
    }

    public func toXDR() -> Data {
      var xdr = Data()

      xdr.append(self.discriminant.toXDR())

      switch self {
      case .emptyVersion(): xdr.append(Data())
      }

      return xdr
    }

  }
}
