// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  union OperationResult switch (OperationResultCode code)
//  {
//  case opINNER:
//      union switch (OperationType type)
//      {
//      case CREATE_ACCOUNT:
//          CreateAccountResult createAccountResult;
//  	case CREATE_ISSUANCE_REQUEST:
//  		CreateIssuanceRequestResult createIssuanceRequestResult;
//      case SET_FEES:
//          SetFeesResult setFeesResult;
//      case CREATE_WITHDRAWAL_REQUEST:
//  		CreateWithdrawalRequestResult createWithdrawalRequestResult;
//      case MANAGE_BALANCE:
//          ManageBalanceResult manageBalanceResult;
//      case MANAGE_ASSET:
//          ManageAssetResult manageAssetResult;
//      case CREATE_PREISSUANCE_REQUEST:
//          CreatePreIssuanceRequestResult createPreIssuanceRequestResult;
//      case MANAGE_LIMITS:
//          ManageLimitsResult manageLimitsResult;
//  	case MANAGE_ASSET_PAIR:
//  		ManageAssetPairResult manageAssetPairResult;
//  	case MANAGE_OFFER:
//  		ManageOfferResult manageOfferResult;
//  	case MANAGE_INVOICE_REQUEST:
//  		ManageInvoiceRequestResult manageInvoiceRequestResult;
//  	case REVIEW_REQUEST:
//  		ReviewRequestResult reviewRequestResult;
//  	case CREATE_SALE_REQUEST:
//  		CreateSaleCreationRequestResult createSaleCreationRequestResult;
//  	case CHECK_SALE_STATE:
//  		CheckSaleStateResult checkSaleStateResult;
//  	case PAYOUT:
//  	    PayoutResult payoutResult;
//  	case CREATE_AML_ALERT:
//  	    CreateAMLAlertRequestResult createAMLAlertRequestResult;
//  	case MANAGE_KEY_VALUE:
//  	    ManageKeyValueResult manageKeyValueResult;
//  	case CREATE_CHANGE_ROLE_REQUEST:
//  	    CreateChangeRoleRequestResult createChangeRoleRequestResult;
//      case MANAGE_EXTERNAL_SYSTEM_ACCOUNT_ID_POOL_ENTRY:
//          ManageExternalSystemAccountIdPoolEntryResult manageExternalSystemAccountIdPoolEntryResult;
//      case BIND_EXTERNAL_SYSTEM_ACCOUNT_ID:
//          BindExternalSystemAccountIdResult bindExternalSystemAccountIdResult;
//      case PAYMENT:
//          PaymentResult paymentResult;
//      case MANAGE_SALE:
//          ManageSaleResult manageSaleResult;
//      case CREATE_MANAGE_LIMITS_REQUEST:
//          CreateManageLimitsRequestResult createManageLimitsRequestResult;
//      case MANAGE_CONTRACT_REQUEST:
//          ManageContractRequestResult manageContractRequestResult;
//      case MANAGE_CONTRACT:
//          ManageContractResult manageContractResult;
//      case CANCEL_SALE_REQUEST:
//          CancelSaleCreationRequestResult cancelSaleCreationRequestResult;
//      case CREATE_ASWAP_BID_REQUEST:
//          CreateASwapBidCreationRequestResult createASwapBidCreationRequestResult;
//      case CANCEL_ASWAP_BID:
//          CancelASwapBidResult cancelASwapBidResult;
//      case CREATE_ASWAP_REQUEST:
//          CreateASwapRequestResult createASwapRequestResult;
//      case MANAGE_ACCOUNT_ROLE:
//          ManageAccountRoleResult manageAccountRoleResult;
//      case MANAGE_ACCOUNT_RULE:
//          ManageAccountRuleResult manageAccountRuleResult;
//      case MANAGE_SIGNER:
//          ManageSignerResult manageSignerResult;
//      case MANAGE_SIGNER_ROLE:
//          ManageSignerRoleResult manageSignerRoleResult;
//      case MANAGE_SIGNER_RULE:
//          ManageSignerRuleResult manageSignerRuleResult;
//      case STAMP:
//          StampResult stampResult;
//      case LICENSE:
//          LicenseResult licenseResult;
//      }
//      tr;
//  case opNO_ENTRY:
//      LedgerEntryType entryType;
//  case opNO_ROLE_PERMISSION:
//      AccountRuleRequirement requirement;
//  default:
//      void;
//  };

//  ===========================================================================
public enum OperationResult: XDRDiscriminatedUnion {
  case opinner(OperationResultTr)
  case opnoEntry(LedgerEntryType)
  case opnoRolePermission(AccountRuleRequirement)

  public var discriminant: Int32 {
    switch self {
    case .opinner: return OperationResultCode.opinner.rawValue
    case .opnoEntry: return OperationResultCode.opnoEntry.rawValue
    case .opnoRolePermission: return OperationResultCode.opnoRolePermission.rawValue
    }
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.discriminant.toXDR())

    switch self {
    case .opinner(let data): xdr.append(data.toXDR())
    case .opnoEntry(let data): xdr.append(data.toXDR())
    case .opnoRolePermission(let data): xdr.append(data.toXDR())
    }

    return xdr
  }
  public enum OperationResultTr: XDRDiscriminatedUnion {
    case createAccount(CreateAccountResult)
    case createIssuanceRequest(CreateIssuanceRequestResult)
    case setFees(SetFeesResult)
    case createWithdrawalRequest(CreateWithdrawalRequestResult)
    case manageBalance(ManageBalanceResult)
    case manageAsset(ManageAssetResult)
    case createPreissuanceRequest(CreatePreIssuanceRequestResult)
    case manageLimits(ManageLimitsResult)
    case manageAssetPair(ManageAssetPairResult)
    case manageOffer(ManageOfferResult)
    case manageInvoiceRequest(ManageInvoiceRequestResult)
    case reviewRequest(ReviewRequestResult)
    case createSaleRequest(CreateSaleCreationRequestResult)
    case checkSaleState(CheckSaleStateResult)
    case payout(PayoutResult)
    case createAmlAlert(CreateAMLAlertRequestResult)
    case manageKeyValue(ManageKeyValueResult)
    case createChangeRoleRequest(CreateChangeRoleRequestResult)
    case manageExternalSystemAccountIdPoolEntry(ManageExternalSystemAccountIdPoolEntryResult)
    case bindExternalSystemAccountId(BindExternalSystemAccountIdResult)
    case payment(PaymentResult)
    case manageSale(ManageSaleResult)
    case createManageLimitsRequest(CreateManageLimitsRequestResult)
    case manageContractRequest(ManageContractRequestResult)
    case manageContract(ManageContractResult)
    case cancelSaleRequest(CancelSaleCreationRequestResult)
    case createAswapBidRequest(CreateASwapBidCreationRequestResult)
    case cancelAswapBid(CancelASwapBidResult)
    case createAswapRequest(CreateASwapRequestResult)
    case manageAccountRole(ManageAccountRoleResult)
    case manageAccountRule(ManageAccountRuleResult)
    case manageSigner(ManageSignerResult)
    case manageSignerRole(ManageSignerRoleResult)
    case manageSignerRule(ManageSignerRuleResult)
    case stamp(StampResult)
    case license(LicenseResult)

    public var discriminant: Int32 {
      switch self {
      case .createAccount: return OperationType.createAccount.rawValue
      case .createIssuanceRequest: return OperationType.createIssuanceRequest.rawValue
      case .setFees: return OperationType.setFees.rawValue
      case .createWithdrawalRequest: return OperationType.createWithdrawalRequest.rawValue
      case .manageBalance: return OperationType.manageBalance.rawValue
      case .manageAsset: return OperationType.manageAsset.rawValue
      case .createPreissuanceRequest: return OperationType.createPreissuanceRequest.rawValue
      case .manageLimits: return OperationType.manageLimits.rawValue
      case .manageAssetPair: return OperationType.manageAssetPair.rawValue
      case .manageOffer: return OperationType.manageOffer.rawValue
      case .manageInvoiceRequest: return OperationType.manageInvoiceRequest.rawValue
      case .reviewRequest: return OperationType.reviewRequest.rawValue
      case .createSaleRequest: return OperationType.createSaleRequest.rawValue
      case .checkSaleState: return OperationType.checkSaleState.rawValue
      case .payout: return OperationType.payout.rawValue
      case .createAmlAlert: return OperationType.createAmlAlert.rawValue
      case .manageKeyValue: return OperationType.manageKeyValue.rawValue
      case .createChangeRoleRequest: return OperationType.createChangeRoleRequest.rawValue
      case .manageExternalSystemAccountIdPoolEntry: return OperationType.manageExternalSystemAccountIdPoolEntry.rawValue
      case .bindExternalSystemAccountId: return OperationType.bindExternalSystemAccountId.rawValue
      case .payment: return OperationType.payment.rawValue
      case .manageSale: return OperationType.manageSale.rawValue
      case .createManageLimitsRequest: return OperationType.createManageLimitsRequest.rawValue
      case .manageContractRequest: return OperationType.manageContractRequest.rawValue
      case .manageContract: return OperationType.manageContract.rawValue
      case .cancelSaleRequest: return OperationType.cancelSaleRequest.rawValue
      case .createAswapBidRequest: return OperationType.createAswapBidRequest.rawValue
      case .cancelAswapBid: return OperationType.cancelAswapBid.rawValue
      case .createAswapRequest: return OperationType.createAswapRequest.rawValue
      case .manageAccountRole: return OperationType.manageAccountRole.rawValue
      case .manageAccountRule: return OperationType.manageAccountRule.rawValue
      case .manageSigner: return OperationType.manageSigner.rawValue
      case .manageSignerRole: return OperationType.manageSignerRole.rawValue
      case .manageSignerRule: return OperationType.manageSignerRule.rawValue
      case .stamp: return OperationType.stamp.rawValue
      case .license: return OperationType.license.rawValue
      }
    }

    public func toXDR() -> Data {
      var xdr = Data()

      xdr.append(self.discriminant.toXDR())

      switch self {
      case .createAccount(let data): xdr.append(data.toXDR())
      case .createIssuanceRequest(let data): xdr.append(data.toXDR())
      case .setFees(let data): xdr.append(data.toXDR())
      case .createWithdrawalRequest(let data): xdr.append(data.toXDR())
      case .manageBalance(let data): xdr.append(data.toXDR())
      case .manageAsset(let data): xdr.append(data.toXDR())
      case .createPreissuanceRequest(let data): xdr.append(data.toXDR())
      case .manageLimits(let data): xdr.append(data.toXDR())
      case .manageAssetPair(let data): xdr.append(data.toXDR())
      case .manageOffer(let data): xdr.append(data.toXDR())
      case .manageInvoiceRequest(let data): xdr.append(data.toXDR())
      case .reviewRequest(let data): xdr.append(data.toXDR())
      case .createSaleRequest(let data): xdr.append(data.toXDR())
      case .checkSaleState(let data): xdr.append(data.toXDR())
      case .payout(let data): xdr.append(data.toXDR())
      case .createAmlAlert(let data): xdr.append(data.toXDR())
      case .manageKeyValue(let data): xdr.append(data.toXDR())
      case .createChangeRoleRequest(let data): xdr.append(data.toXDR())
      case .manageExternalSystemAccountIdPoolEntry(let data): xdr.append(data.toXDR())
      case .bindExternalSystemAccountId(let data): xdr.append(data.toXDR())
      case .payment(let data): xdr.append(data.toXDR())
      case .manageSale(let data): xdr.append(data.toXDR())
      case .createManageLimitsRequest(let data): xdr.append(data.toXDR())
      case .manageContractRequest(let data): xdr.append(data.toXDR())
      case .manageContract(let data): xdr.append(data.toXDR())
      case .cancelSaleRequest(let data): xdr.append(data.toXDR())
      case .createAswapBidRequest(let data): xdr.append(data.toXDR())
      case .cancelAswapBid(let data): xdr.append(data.toXDR())
      case .createAswapRequest(let data): xdr.append(data.toXDR())
      case .manageAccountRole(let data): xdr.append(data.toXDR())
      case .manageAccountRule(let data): xdr.append(data.toXDR())
      case .manageSigner(let data): xdr.append(data.toXDR())
      case .manageSignerRole(let data): xdr.append(data.toXDR())
      case .manageSignerRule(let data): xdr.append(data.toXDR())
      case .stamp(let data): xdr.append(data.toXDR())
      case .license(let data): xdr.append(data.toXDR())
      }

      return xdr
    }

  }
}
