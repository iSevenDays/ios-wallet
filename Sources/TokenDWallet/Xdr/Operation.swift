// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct Operation
//  {
//      //: sourceAccount is the account used to run the operation
//      //: if not set, the runtime defaults to "sourceAccount" specified at
//      //: the transaction level
//      AccountID* sourceAccount;
//  
//      union switch (OperationType type)
//      {
//      case CREATE_ACCOUNT:
//          CreateAccountOp createAccountOp;
//  	case CREATE_ISSUANCE_REQUEST:
//  		CreateIssuanceRequestOp createIssuanceRequestOp;
//      case SET_FEES:
//          SetFeesOp setFeesOp;
//  	case CREATE_WITHDRAWAL_REQUEST:
//  		CreateWithdrawalRequestOp createWithdrawalRequestOp;
//  	case MANAGE_BALANCE:
//  		ManageBalanceOp manageBalanceOp;
//      case MANAGE_ASSET:
//          ManageAssetOp manageAssetOp;
//      case CREATE_PREISSUANCE_REQUEST:
//          CreatePreIssuanceRequestOp createPreIssuanceRequest;
//      case MANAGE_LIMITS:
//          ManageLimitsOp manageLimitsOp;
//  	case MANAGE_ASSET_PAIR:
//  		ManageAssetPairOp manageAssetPairOp;
//  	case MANAGE_OFFER:
//  		ManageOfferOp manageOfferOp;
//      case MANAGE_INVOICE_REQUEST:
//          ManageInvoiceRequestOp manageInvoiceRequestOp;
//  	case REVIEW_REQUEST:
//  		ReviewRequestOp reviewRequestOp;
//  	case CREATE_SALE_REQUEST:
//  		CreateSaleCreationRequestOp createSaleCreationRequestOp;
//  	case CHECK_SALE_STATE:
//  		CheckSaleStateOp checkSaleStateOp;
//  	case PAYOUT:
//  	    PayoutOp payoutOp;
//  	case CREATE_AML_ALERT:
//  	    CreateAMLAlertRequestOp createAMLAlertRequestOp;
//  	case MANAGE_KEY_VALUE:
//  	    ManageKeyValueOp manageKeyValueOp;
//  	case CREATE_CHANGE_ROLE_REQUEST:
//  		CreateChangeRoleRequestOp createChangeRoleRequestOp;
//      case MANAGE_EXTERNAL_SYSTEM_ACCOUNT_ID_POOL_ENTRY:
//          ManageExternalSystemAccountIdPoolEntryOp manageExternalSystemAccountIdPoolEntryOp;
//      case BIND_EXTERNAL_SYSTEM_ACCOUNT_ID:
//          BindExternalSystemAccountIdOp bindExternalSystemAccountIdOp;
//      case PAYMENT:
//          PaymentOp paymentOp;
//      case MANAGE_SALE:
//          ManageSaleOp manageSaleOp;
//      case CREATE_MANAGE_LIMITS_REQUEST:
//          CreateManageLimitsRequestOp createManageLimitsRequestOp;
//      case MANAGE_CONTRACT_REQUEST:
//          ManageContractRequestOp manageContractRequestOp;
//      case MANAGE_CONTRACT:
//          ManageContractOp manageContractOp;
//      case CANCEL_SALE_REQUEST:
//          CancelSaleCreationRequestOp cancelSaleCreationRequestOp;
//      case CREATE_ASWAP_BID_REQUEST:
//          CreateASwapBidCreationRequestOp createASwapBidCreationRequestOp;
//      case CANCEL_ASWAP_BID:
//          CancelASwapBidOp cancelASwapBidOp;
//      case CREATE_ASWAP_REQUEST:
//          CreateASwapRequestOp createASwapRequestOp;
//      case MANAGE_ACCOUNT_ROLE:
//          ManageAccountRoleOp manageAccountRoleOp;
//      case MANAGE_ACCOUNT_RULE:
//          ManageAccountRuleOp manageAccountRuleOp;
//      case MANAGE_SIGNER:
//          ManageSignerOp manageSignerOp;
//      case MANAGE_SIGNER_ROLE:
//          ManageSignerRoleOp manageSignerRoleOp;
//      case MANAGE_SIGNER_RULE:
//          ManageSignerRuleOp manageSignerRuleOp;
//      case STAMP:
//          StampOp stampOp;
//      case LICENSE:
//          LicenseOp licenseOp;
//      }
//      body;
//  };

//  ===========================================================================
public struct Operation: XDREncodable {
  public var sourceAccount: AccountID?
  public var body: OperationBody

  public init(
      sourceAccount: AccountID?,
      body: OperationBody) {

    self.sourceAccount = sourceAccount
    self.body = body
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.sourceAccount.toXDR())
    xdr.append(self.body.toXDR())

    return xdr
  }

  public enum OperationBody: XDRDiscriminatedUnion {
    case createAccount(CreateAccountOp)
    case createIssuanceRequest(CreateIssuanceRequestOp)
    case setFees(SetFeesOp)
    case createWithdrawalRequest(CreateWithdrawalRequestOp)
    case manageBalance(ManageBalanceOp)
    case manageAsset(ManageAssetOp)
    case createPreissuanceRequest(CreatePreIssuanceRequestOp)
    case manageLimits(ManageLimitsOp)
    case manageAssetPair(ManageAssetPairOp)
    case manageOffer(ManageOfferOp)
    case manageInvoiceRequest(ManageInvoiceRequestOp)
    case reviewRequest(ReviewRequestOp)
    case createSaleRequest(CreateSaleCreationRequestOp)
    case checkSaleState(CheckSaleStateOp)
    case payout(PayoutOp)
    case createAmlAlert(CreateAMLAlertRequestOp)
    case manageKeyValue(ManageKeyValueOp)
    case createChangeRoleRequest(CreateChangeRoleRequestOp)
    case manageExternalSystemAccountIdPoolEntry(ManageExternalSystemAccountIdPoolEntryOp)
    case bindExternalSystemAccountId(BindExternalSystemAccountIdOp)
    case payment(PaymentOp)
    case manageSale(ManageSaleOp)
    case createManageLimitsRequest(CreateManageLimitsRequestOp)
    case manageContractRequest(ManageContractRequestOp)
    case manageContract(ManageContractOp)
    case cancelSaleRequest(CancelSaleCreationRequestOp)
    case createAswapBidRequest(CreateASwapBidCreationRequestOp)
    case cancelAswapBid(CancelASwapBidOp)
    case createAswapRequest(CreateASwapRequestOp)
    case manageAccountRole(ManageAccountRoleOp)
    case manageAccountRule(ManageAccountRuleOp)
    case manageSigner(ManageSignerOp)
    case manageSignerRole(ManageSignerRoleOp)
    case manageSignerRule(ManageSignerRuleOp)
    case stamp(StampOp)
    case license(LicenseOp)

    public var discriminant: Int32 {
      switch self {
      case .createAccount: return OperationType.createAccount.rawValue
      case .createIssuanceRequest: return OperationType.createIssuanceRequest.rawValue
      case .setFees: return OperationType.setFees.rawValue
      case .createWithdrawalRequest: return OperationType.createWithdrawalRequest.rawValue
      case .manageBalance: return OperationType.manageBalance.rawValue
      case .manageAsset: return OperationType.manageAsset.rawValue
      case .createPreissuanceRequest: return OperationType.createPreissuanceRequest.rawValue
      case .manageLimits: return OperationType.manageLimits.rawValue
      case .manageAssetPair: return OperationType.manageAssetPair.rawValue
      case .manageOffer: return OperationType.manageOffer.rawValue
      case .manageInvoiceRequest: return OperationType.manageInvoiceRequest.rawValue
      case .reviewRequest: return OperationType.reviewRequest.rawValue
      case .createSaleRequest: return OperationType.createSaleRequest.rawValue
      case .checkSaleState: return OperationType.checkSaleState.rawValue
      case .payout: return OperationType.payout.rawValue
      case .createAmlAlert: return OperationType.createAmlAlert.rawValue
      case .manageKeyValue: return OperationType.manageKeyValue.rawValue
      case .createChangeRoleRequest: return OperationType.createChangeRoleRequest.rawValue
      case .manageExternalSystemAccountIdPoolEntry: return OperationType.manageExternalSystemAccountIdPoolEntry.rawValue
      case .bindExternalSystemAccountId: return OperationType.bindExternalSystemAccountId.rawValue
      case .payment: return OperationType.payment.rawValue
      case .manageSale: return OperationType.manageSale.rawValue
      case .createManageLimitsRequest: return OperationType.createManageLimitsRequest.rawValue
      case .manageContractRequest: return OperationType.manageContractRequest.rawValue
      case .manageContract: return OperationType.manageContract.rawValue
      case .cancelSaleRequest: return OperationType.cancelSaleRequest.rawValue
      case .createAswapBidRequest: return OperationType.createAswapBidRequest.rawValue
      case .cancelAswapBid: return OperationType.cancelAswapBid.rawValue
      case .createAswapRequest: return OperationType.createAswapRequest.rawValue
      case .manageAccountRole: return OperationType.manageAccountRole.rawValue
      case .manageAccountRule: return OperationType.manageAccountRule.rawValue
      case .manageSigner: return OperationType.manageSigner.rawValue
      case .manageSignerRole: return OperationType.manageSignerRole.rawValue
      case .manageSignerRule: return OperationType.manageSignerRule.rawValue
      case .stamp: return OperationType.stamp.rawValue
      case .license: return OperationType.license.rawValue
      }
    }

    public func toXDR() -> Data {
      var xdr = Data()

      xdr.append(self.discriminant.toXDR())

      switch self {
      case .createAccount(let data): xdr.append(data.toXDR())
      case .createIssuanceRequest(let data): xdr.append(data.toXDR())
      case .setFees(let data): xdr.append(data.toXDR())
      case .createWithdrawalRequest(let data): xdr.append(data.toXDR())
      case .manageBalance(let data): xdr.append(data.toXDR())
      case .manageAsset(let data): xdr.append(data.toXDR())
      case .createPreissuanceRequest(let data): xdr.append(data.toXDR())
      case .manageLimits(let data): xdr.append(data.toXDR())
      case .manageAssetPair(let data): xdr.append(data.toXDR())
      case .manageOffer(let data): xdr.append(data.toXDR())
      case .manageInvoiceRequest(let data): xdr.append(data.toXDR())
      case .reviewRequest(let data): xdr.append(data.toXDR())
      case .createSaleRequest(let data): xdr.append(data.toXDR())
      case .checkSaleState(let data): xdr.append(data.toXDR())
      case .payout(let data): xdr.append(data.toXDR())
      case .createAmlAlert(let data): xdr.append(data.toXDR())
      case .manageKeyValue(let data): xdr.append(data.toXDR())
      case .createChangeRoleRequest(let data): xdr.append(data.toXDR())
      case .manageExternalSystemAccountIdPoolEntry(let data): xdr.append(data.toXDR())
      case .bindExternalSystemAccountId(let data): xdr.append(data.toXDR())
      case .payment(let data): xdr.append(data.toXDR())
      case .manageSale(let data): xdr.append(data.toXDR())
      case .createManageLimitsRequest(let data): xdr.append(data.toXDR())
      case .manageContractRequest(let data): xdr.append(data.toXDR())
      case .manageContract(let data): xdr.append(data.toXDR())
      case .cancelSaleRequest(let data): xdr.append(data.toXDR())
      case .createAswapBidRequest(let data): xdr.append(data.toXDR())
      case .cancelAswapBid(let data): xdr.append(data.toXDR())
      case .createAswapRequest(let data): xdr.append(data.toXDR())
      case .manageAccountRole(let data): xdr.append(data.toXDR())
      case .manageAccountRule(let data): xdr.append(data.toXDR())
      case .manageSigner(let data): xdr.append(data.toXDR())
      case .manageSignerRole(let data): xdr.append(data.toXDR())
      case .manageSignerRule(let data): xdr.append(data.toXDR())
      case .stamp(let data): xdr.append(data.toXDR())
      case .license(let data): xdr.append(data.toXDR())
      }

      return xdr
    }

  }
}
