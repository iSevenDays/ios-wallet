// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  struct ManageAssetPairOp
//  {
//      //: Defines a ManageBalanceAction which would be performed on an asset pair
//      ManageAssetPairAction action;
//      //: Defines a base asset of the asset pair
//      AssetCode base;
//      //: Defines a base asset of the asset pair
//      AssetCode quote;
//  
//      //: Price of the asset pair assigned on creation. Can only be updated by the `ManageAssetPair` operation with action `UPDATE_PRICE`
//      int64 physicalPrice;
//  
//      //: Correction of physical price in percents. If physical price is set and restriction by physical price set, mininal price for offer for this pair will be physicalPrice * physicalPriceCorrection
//      int64 physicalPriceCorrection;
//      //: Maximal amount of price change in percents
//      int64 maxPriceStep;
//  
//      //: Bitmask of asset policies set by creator or corrected by manage asset operations
//      int32 policies;
//  
//      //: reserved for future use
//      union switch (LedgerVersion v)
//      {
//      case EMPTY_VERSION:
//          void;
//      }
//      ext;
//  };

//  ===========================================================================
public struct ManageAssetPairOp: XDREncodable {
  public var action: ManageAssetPairAction
  public var base: AssetCode
  public var quote: AssetCode
  public var physicalPrice: Int64
  public var physicalPriceCorrection: Int64
  public var maxPriceStep: Int64
  public var policies: Int32
  public var ext: ManageAssetPairOpExt

  public init(
      action: ManageAssetPairAction,
      base: AssetCode,
      quote: AssetCode,
      physicalPrice: Int64,
      physicalPriceCorrection: Int64,
      maxPriceStep: Int64,
      policies: Int32,
      ext: ManageAssetPairOpExt) {

    self.action = action
    self.base = base
    self.quote = quote
    self.physicalPrice = physicalPrice
    self.physicalPriceCorrection = physicalPriceCorrection
    self.maxPriceStep = maxPriceStep
    self.policies = policies
    self.ext = ext
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.action.toXDR())
    xdr.append(self.base.toXDR())
    xdr.append(self.quote.toXDR())
    xdr.append(self.physicalPrice.toXDR())
    xdr.append(self.physicalPriceCorrection.toXDR())
    xdr.append(self.maxPriceStep.toXDR())
    xdr.append(self.policies.toXDR())
    xdr.append(self.ext.toXDR())

    return xdr
  }

  public enum ManageAssetPairOpExt: XDRDiscriminatedUnion {
    case emptyVersion()

    public var discriminant: Int32 {
      switch self {
      case .emptyVersion: return LedgerVersion.emptyVersion.rawValue
      }
    }

    public func toXDR() -> Data {
      var xdr = Data()

      xdr.append(self.discriminant.toXDR())

      switch self {
      case .emptyVersion(): xdr.append(Data())
      }

      return xdr
    }

  }
}
