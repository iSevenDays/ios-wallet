// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

import Foundation

// === xdr source ============================================================

//  //: PollData is used to pass `PollType` with necessary params
//  union PollData switch (PollType type)
//  {
//  case SINGLE_CHOICE:
//      EmptyExt ext;
//  };

//  ===========================================================================
public enum PollData: XDRDiscriminatedUnion {
  case singleChoice(EmptyExt)

  public var discriminant: Int32 {
    switch self {
    case .singleChoice: return PollType.singleChoice.rawValue
    }
  }

  public func toXDR() -> Data {
    var xdr = Data()

    xdr.append(self.discriminant.toXDR())

    switch self {
    case .singleChoice(let data): xdr.append(data.toXDR())
    }

    return xdr
  }
}
